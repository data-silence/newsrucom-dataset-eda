from imports.imports import TOKEN, sys, asyncio, logging, dt
from scripts.time_machine import News
from scripts.keyboards import make_row_keyboard, action_kb
from scripts.handlers import ChoiseState

from aiogram.fsm.context import FSMContext
from aiogram.types import Message

from aiogram import Bot, Dispatcher
from aiogram.fsm.storage.memory import MemoryStorage

from aiogram_calendar import DialogCalendar, DialogCalendarCallback
from aiogram.types import CallbackQuery
from aiogram.filters import CommandStart
from aiogram.filters.callback_data import CallbackData

from scripts.handlers import router
from scripts import common_handlers

bot = Bot(token=TOKEN)
dp = Dispatcher(storage=MemoryStorage())
dp.include_routers(router, common_handlers.router)  # –í—Å–µ —Ö—ç–Ω–¥–ª–µ—Ä—ã –±–æ—Ç–∞ –Ω–∞—Ö–æ–¥—è—Ç—Å—è –∑–¥–µ—Å—å


@dp.message(CommandStart())
async def dialog_timemachine(message: Message, state: FSMContext) -> None:
    await message.answer(
        text=str("üí®  –≠—Ç–æ ‚Äî –º–∞—à–∏–Ω–∞ –≤—Ä–µ–º–µ–Ω–∏!  üí®\n\n"
                 "–û–Ω–∞ –º–æ–∂–µ—Ç –∑–∞–±—Ä–æ—Å–∏—Ç—å —Ç–µ–±—è –≤ –Ω–æ–≤–æ—Å—Ç–Ω–æ–π –ø–æ—Ç–æ–∫ –ø—Ä–æ—à–ª–æ–≥–æ.\n\n"
                 "–î–æ—Å—Ç—É–ø–Ω—ã –ø–æ–ª—ë—Ç—ã –≤ –¥–∏–∞–ø–∞–∑–æ–Ω–µ\n—Å 28 –∞–≤–≥—É—Å—Ç–∞ 2000 –ø–æ 31 –º–∞—è 2021 –≥–æ–¥–∞.\n\n"
                 "–í—ã–±–µ—Ä–∏ –¥–∞—Ç—É, –ø—Ä–∏—Å—Ç–µ–≥–Ω–∏ —Ä–µ–º–Ω–∏, –∫–ª—é—á –ø–æ–≤–µ—Ä–Ω–∏ –∏ –ø–æ–ª–µ—Ç–µ–ª–∏! üõ∏"),
        reply_markup=await DialogCalendar().start_calendar(2010)
    )
    await state.set_state(ChoiseState.choosing_date)


@dp.callback_query(DialogCalendarCallback.filter(), ChoiseState.choosing_date)
async def process_dialog_calendar(callback_query: CallbackQuery, callback_data: CallbackData, state: FSMContext):
    await state.set_data({})
    selected, date = await DialogCalendar().process_selection(callback_query, callback_data)
    if selected:
        # await callback_query.message.answer('–ò–¥—ë—Ç –ø—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç–∏ –≤–≤–µ–¥–µ–Ω–Ω—ã—Ö –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç')
        if dt.datetime(2000, 8, 28) <= date <= dt.datetime(2021, 5, 31):
            await callback_query.message.answer('–û–∂–∏–¥–∞–π: –ø–µ—Ä–µ—Å–µ–∫–∞–µ–º –Ω–æ–≤–æ—Å—Ç–Ω–æ–µ –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–æ üöÄ')
            date_news = News(date)
            digest = date_news.get_category_digest()
            await state.update_data(date=date)
            await state.update_data(date_news=date_news)
            await callback_query.message.answer(
                digest, parse_mode='html')
            await (callback_query.message.answer
                   (text="–¢–µ–ø–µ—Ä—å –º–æ–∂–µ—à—å –≤–∑–≥–ª—è–Ω—É—Ç—å –Ω–∞ –≥—Ä–∞—Ñ–∏–∫ —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –∫–∞—Ç–µ–≥–æ—Ä–∏–π –Ω–æ–≤–æ—Å—Ç–µ–π —ç—Ç–æ–≥–æ –¥–Ω—è, "
                         "–∏–ª–∏ –ø–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å –Ω–∞–π—Ç–∏ —Å–∞–º—É—é –±–ª–∏–∑–∫—É—é –Ω–æ–≤–æ—Å—Ç—å –Ω–∞ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â—É—é —Ç–µ–±—è —Ç–µ–º—É –≤ —Ç–æ—Ç –¥–µ–Ω—å.\n\n"
                         "–í—ã–±–µ—Ä–∏ –¥–∞–ª—å–Ω–µ–π—à–∏–π –º–∞—Ä—à—Ä—É—Ç —Å–ª–µ–¥–æ–≤–∞–Ω–∏—è –Ω–∞ –Ω–∏–∂–Ω–µ–π –ø–∞–Ω–µ–ª–∏ üîΩ",
                    reply_markup=make_row_keyboard(action_kb)
                    ))
            await state.set_state(ChoiseState.choosing_action)
        else:
            await (callback_query.message.answer
                   (text="–ó–Ω–∞–µ–º –æ –Ω–æ–≤–æ—Å—Ç—è—Ö –∑–∞ –ø–µ—Ä–∏–æ–¥ —Å 28 –∞–≤–≥—É—Å—Ç–∞ 2000 –≥–æ–¥–∞ –ø–æ 31 –º–∞—è 2021, "
                         "–¥–æ –æ—Å—Ç–∞–ª—å–Ω—ã—Ö –¥–æ–ª–µ—Ç–µ—Ç—å –ø–æ–∫–∞ –Ω–µ –º–æ–∂–µ–º. –ü–æ–ø—Ä–æ–±—É–π –µ—â—ë —Ä–∞–∑–æ–∫, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞",
                    reply_markup=await DialogCalendar().start_calendar(2010)
                    ))


async def main():
    logging.basicConfig(level=logging.INFO, stream=sys.stdout)
    await dp.start_polling(bot)


if __name__ == '__main__':
    asyncio.run(main())
